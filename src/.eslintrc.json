{
  "root": true,
  "ignorePatterns": [
    "projects/**/*"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "rules": {
        "@angular-eslint/no-lifecycle-call": "error",
        "@angular-eslint/no-pipe-impure": "error",
        "@angular-eslint/no-queries-metadata-property": "error",
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/ban-ts-comment": "error",
        "@typescript-eslint/ban-types": "error",
        "@typescript-eslint/class-literal-property-style": [
          "warn",
          "fields"
        ],
        "@typescript-eslint/consistent-indexed-object-style": [
          "warn",
          "record"
        ],
        "@typescript-eslint/consistent-type-assertions": [
          "warn",
          {
            "assertionStyle": "as",
            "objectLiteralTypeAssertions": "never"
          }
        ],
        "@typescript-eslint/consistent-type-definitions": [
          "warn",
          "interface"
        ],
        "@typescript-eslint/explicit-function-return-type": "error",
        "@typescript-eslint/member-delimiter-style": "error",
        "@typescript-eslint/method-signature-style": "warn",
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": [
              "camelCase"
            ],
            "leadingUnderscore": "forbid"
          },
          {
            "selector": "classMethod",
            "modifiers": [
              "private"
            ],
            "format": [
              "camelCase"
            ],
            "leadingUnderscore": "require"
          },
          {
            "selector": "classProperty",
            "modifiers": [
              "private"
            ],
            "format": [
              "camelCase"
            ],
            "leadingUnderscore": "require"
          },
          {
            "selector": "classProperty",
            "modifiers": [
              "private",
              "readonly"
            ],
            "format": [
              "UPPER_CASE"
            ],
            "types": [
              "boolean",
              "string",
              "number"
            ],
            "leadingUnderscore": "forbid"
          },
          {
            "selector": "classProperty",
            "modifiers": [
              "public",
              "readonly"
            ],
            "format": [
              "UPPER_CASE"
            ],
            "types": [
              "boolean",
              "string",
              "number"
            ],
            "leadingUnderscore": "forbid"
          },
          {
            "selector": "typeProperty",
            "modifiers": [
              "readonly"
            ],
            "format": [
              "UPPER_CASE"
            ],
            "types": [
              "boolean",
              "string",
              "number"
            ],
            "leadingUnderscore": "forbid"
          },
          {
            "selector": "typeProperty",
            "modifiers": [
              "public",
              "readonly"
            ],
            "format": [
              "UPPER_CASE"
            ],
            "types": [
              "boolean",
              "string",
              "number"
            ],
            "leadingUnderscore": "forbid"
          },
          {
            "selector": "parameterProperty",
            "modifiers": [
              "private"
            ],
            "format": [
              "camelCase"
            ],
            "leadingUnderscore": "require"
          },
          {
            "selector": "typeLike",
            "format": [
              "PascalCase"
            ]
          },
          {
            "selector": "function",
            "modifiers": [
              "exported"
            ],
            "format": [
              "PascalCase",
              "UPPER_CASE"
            ]
          },
          {
            "selector": "enumMember",
            "format": [
              "PascalCase"
            ]
          },
          {
            "selector": "variable",
            "modifiers": [
              "exported"
            ],
            "format": [
              "UPPER_CASE"
            ]
          }
        ],
        "@typescript-eslint/no-base-to-string": "warn",
        "@typescript-eslint/no-confusing-non-null-assertion": "warn",
        "@typescript-eslint/no-dynamic-delete": "warn",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-extra-non-null-assertion": "error",
        "@typescript-eslint/no-extraneous-class": [
          "error",
          {
            "allowWithDecorator": true
          }
        ],
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-implicit-any-catch": "warn",
        "@typescript-eslint/no-inferrable-types": "error",
        "@typescript-eslint/no-invalid-void-type": "error",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-require-imports": "error",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/no-unsafe-argument": "error",
        "@typescript-eslint/no-unsafe-assignment": "error",
        "@typescript-eslint/no-unsafe-call": "error",
        "@typescript-eslint/no-unsafe-member-access": "error",
        "@typescript-eslint/no-unsafe-return": "error",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/non-nullable-type-assertion-style": "warn",
        "@typescript-eslint/prefer-as-const": "warn",
        "@typescript-eslint/prefer-enum-initializers": "warn",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-includes": "warn",
        "@typescript-eslint/prefer-literal-enum-member": "warn",
        "@typescript-eslint/prefer-nullish-coalescing": "error",
        "@typescript-eslint/prefer-optional-chain": "error",
        "@typescript-eslint/prefer-readonly": "error",
        "@typescript-eslint/prefer-reduce-type-parameter": "warn",
        "@typescript-eslint/prefer-regexp-exec": "warn",
        "@typescript-eslint/prefer-string-starts-ends-with": "error",
        "@typescript-eslint/require-array-sort-compare": "error",
        "@typescript-eslint/restrict-plus-operands": "error",
        "@typescript-eslint/restrict-template-expressions": [
          "warn",
          {
            "allowBoolean": true,
            "allowNullish": true,
            "allowAny": true
          }
        ],
        "@typescript-eslint/type-annotation-spacing": "warn",
        "brace-style": "off",
        "@typescript-eslint/brace-style": [
          "warn",
          "1tbs"
        ],
        "comma-spacing": "off",
        "@typescript-eslint/comma-spacing": "error",
        "default-param-last": "off",
        "@typescript-eslint/default-param-last": "error",
        "dot-notation": "off",
        "@typescript-eslint/dot-notation": "warn",
        "func-call-spacing": "off",
        "@typescript-eslint/func-call-spacing": "error",
        "keyword-spacing": "off",
        "@typescript-eslint/keyword-spacing": "error",
        "lines-between-class-members": "off",
        "@typescript-eslint/lines-between-class-members": [
          "error",
          {
            "exceptAfterSingleLine": true
          }
        ],
        "no-array-constructor": "off",
        "@typescript-eslint/no-array-constructor": "error",
        "no-dupe-class-members": "off",
        "@typescript-eslint/no-dupe-class-members": "error",
        "no-duplicate-imports": "off",
        "@typescript-eslint/no-duplicate-imports": "warn",
        "no-empty-function": "off",
        "@typescript-eslint/no-empty-function": "error",
        "no-extra-parens": "off",
        "@typescript-eslint/no-extra-parens": "warn",
        "no-extra-semi": "off",
        "@typescript-eslint/no-extra-semi": "warn",
        "no-implied-eval": "off",
        "@typescript-eslint/no-implied-eval": "error",
        "no-invalid-this": "off",
        "@typescript-eslint/no-invalid-this": "error",
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": "error",
        "no-throw-literal": "off",
        "@typescript-eslint/no-throw-literal": "error",
        "no-unused-expressions": "off",
        "@typescript-eslint/no-unused-expressions": "error",
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": "error",
        "no-useless-constructor": "off",
        "@typescript-eslint/no-useless-constructor": "error",
        "object-curly-spacing": "off",
        "@typescript-eslint/object-curly-spacing": [
          "warn",
          "always"
        ],
        "quotes": "off",
        "@typescript-eslint/quotes": [
          "error",
          "single",
          {
            "avoidEscape": false,
            "allowTemplateLiterals": true
          }
        ],
        "semi": "off",
        "@typescript-eslint/semi": "error",
        "space-before-function-paren": "off",
        "@typescript-eslint/space-before-function-paren": [
          "error",
          "never"
        ],
        "space-infix-ops": "off",
        "@typescript-eslint/space-infix-ops": "warn",
        "array-bracket-spacing": [
          "warn",
          "never"
        ],
        "arrow-body-style": "warn",
        "arrow-spacing": "warn",
        "comma-style": "warn",
        "computed-property-spacing": "warn",
        "constructor-super": "error",
        "curly": [
          "error",
          "all"
        ],
        "dot-location": [
          "warn",
          "property"
        ],
        "eol-last": "warn",
        "eqeqeq": [
          "error",
          "always",
          {
            "null": "ignore"
          }
        ],
        "for-direction": "error",
        "guard-for-in": "error",
        "implicit-arrow-linebreak": "warn",
        "key-spacing": "warn",
        "max-len": [
          "warn",
          {
            "code": 150,
            "tabWidth": 2
          }
        ],
        "newline-per-chained-call": "warn",
        "no-alert": "error",
        "no-bitwise": "error",
        "no-caller": "error",
        "no-case-declarations": "error",
        "no-class-assign": "error",
        "no-compare-neg-zero": "error",
        "no-cond-assign": "error",
        "no-console": "error",
        "no-constant-condition": "error",
        "no-constructor-return": "error",
        "no-debugger": "error",
        "no-dupe-else-if": "error",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-else-return": "warn",
        "no-empty": "error",
        "no-empty-character-class": "error",
        "no-ex-assign": "error",
        "no-extra-boolean-cast": "error",
        "no-eval": "error",
        "no-extend-native": "error",
        "no-fallthrough": "error",
        "no-func-assign": "error",
        "no-global-assign": "error",
        "no-import-assign": "error",
        "no-invalid-regexp": "error",
        "no-irregular-whitespace": "error",
        "no-labels": "error",
        "no-lonely-if": "warn",
        "no-multi-spaces": "warn",
        "no-multiple-empty-lines": [
          "warn",
          {
            "max": 1
          }
        ],
        "no-obj-calls": "error",
        "no-octal": "error",
        "no-prototype-builtins": "error",
        "no-regex-spaces": "warn",
        "no-self-assign": "error",
        "no-self-compare": "error",
        "no-setter-return": "error",
        "no-shadow-restricted-names": "error",
        "no-sparse-arrays": "error",
        "no-tabs": "error",
        "no-trailing-spaces": "warn",
        "no-unexpected-multiline": "error",
        "no-unneeded-ternary": "warn",
        "no-unreachable": "error",
        "no-unsafe-finally": "error",
        "no-unsafe-negation": "error",
        "no-useless-catch": "error",
        "no-var": "error",
        "no-whitespace-before-property": "warn",
        "no-with": "error",
        "padded-blocks": [
          "warn",
          "never"
        ],
        "prefer-arrow-callback": "warn",
        "prefer-const": "error",
        "prefer-object-spread": "warn",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "prefer-template": "warn",
        "rest-spread-spacing": "warn",
        "space-before-blocks": "warn",
        "space-in-parens": "warn",
        "spaced-comment": [
          "warn",
          "always",
          {
            "exceptions": [
              "*"
            ]
          }
        ],
        "template-curly-spacing": "warn",
        "use-isnan": "error",
        "valid-typeof": "error",
        "yoda": "warn",
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "style": "kebab-case"
          }
        ]
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {
        "@angular-eslint/template/accessibility-valid-aria": "error",
        "@angular-eslint/template/eqeqeq": [
          "error",
          {
            "allowNullOrUndefined": true
          }
        ],
        "@angular-eslint/template/no-any": "warn",
        "@angular-eslint/template/no-call-expression": "warn",
        "@angular-eslint/template/no-duplicate-attributes": "error",
        "@angular-eslint/template/no-positive-tabindex": "warn"
      }
    }
  ]
}